Printmsgexit(){
    if [ ! -z "$1" ]
    then
        echo -e "$1"
    fi
    ftmp delete
    exit 1
}

check(){
    if [ "$4" = "return" ]
    then
        Execargu="return $5"
    fi 
    if [ "$4" = "exit" ]
    then
        Execargu="exit $5"
    fi 
    RETURNVAU="`$(dirname $0)/../server/metis/python/string_test $1 $2`"
    if [ "$RETURNVAU" = "True" ]
    then
        Retncode=0
    fi
    if [ "$RETURNVAU" = "False" ]
    then
        Retncode=1
    fi
    if [ "$Retncode" = "$3" ]
    then
        Printmsgexit "$6"
    fi 
}


Check(){
    for Argus in "$@"
    do 
        case $Argus in 
            user)
                if [ "$2" = atusr ]
                then
                    if [ "$UID" != 0 ] && [ $3 != `whoami` ]
                    then
                        log error    "$4"
                        Printmsgexit "$4"
                    fi 
                fi
                ;;
            file)
                if [ "$2" = create ]
                then
                    if [ "$4" = "dir" ]
                    then
                        if [ ! -d "$5" ]
                        then
                            mkdir -p -m $3 "$5"
                        fi 
                    fi 
                    if [ "$4" = "file" ]
                    then
                        if [ ! -f "$5" ]
                        then
                            touch "$5"
                            chmod $3 "$5"
                        fi 
                    fi 
                fi 
                if [ "$2" = empty ]
                then
                    if [ ! -s "$3" ]
                    then
                        log error    "$4"
                        Printmsgexit "$4"
                    fi
                fi
                if [ "$2" = exist ]
                then
                    if [ ! -e "$3" ]
                    then
                        log error    "$4"
                        Printmsgexit "$4"
                    fi
                fi 
                ;;
            input)
                if [ "$2" = range ]
                then
                    if [ "$3" -gt "$4" ]
                    then
                        log error    "$5"
                        Printmsgexit "$5"
                    fi 
                fi 
                if [ "$2" = empty ]
                then
                    if [ -z "$3" ]
                    then
                        log error    "$4"
                        Printmsgexit "$4"
                    fi 
                fi 
                ;;
            cmd)
                Commands="$2"
                echo "$Commands" | egrep -iq "$cmd_abrt"
                if [ $? = 0 ]
                then
                    log warn "Warning: Refused command:$Username@$SERVIPAD:$Commands"
                    Printmsgexit "\033[1;41mWarning\033[0m: Refused command: '\033[;31m$Commands\033[0m'"
                fi 
                
                echo "$Commands" | egrep -iq "$cmd_warn"
                if [ $? = 0 ]
                then
                    log warn "Warning: Refused command($Username@$SERVIPAD:$Commands)"
                    Printmsgexit "\033[1;41mWarning\033[0m: '\033[;31m$Commands\033[0m': command refused"
                fi 
                echo "$Commands" | egrep -iq "$cmd_cfrm"
                if [ $? = 0 ]
                then
                    echo -en "\033[1;41mAttention\033[0m: '\033[;31m$Commands\033[0m': Confirm you command[y/N]: "
                    read usr_confirm
                    if [ -z "$usr_confirm" ]
                    then
                        log error "Command($Commands) canceled"
                        ftmp delete
                        exit 1
                    fi
                    if [ "$usr_confirm" = y ] || [ "$usr_confirm" = Y ]
                    then
                        Confirmed=Yes
                        log info "Command($Username@$SERVIPAD:$Commands) confirmed: $usr_confirm"
                    else
                        ftmp delete
                        log info "Command($Username@$SERVIPAD:$Commands) confirmed: $usr_confirm, program terminated"
                    fi 
                fi
                ;;
        esac
    done
}
