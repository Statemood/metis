Trantemp=/data/.temp/metis

if [ -z "$1" ]
then
    echo "Request argument"
    log warn "Request argument, program terminated"
    ftmp delete
    exit 1
fi 

Cleartmp(){
    ftmp delete
}

gt_mg_exec(){
    db_exec "select * from metis.server where CTIP='$ServerIP' or CUIP='$ServerIP' or CMIP='$ServerIP' or NATIP='$ServerIP'" | sed '1d' > $srv_info
    sed -i 's/NULL/-/g' $srv_info
    log info "Check server information of $ServerIP"
	Check file empty $srv_info "Error: No results found"
    echo -e "\033[1mHost information of \033[34m$ServerIP\033[0m:"
    CPUMODE="`awk '{print $10,$11}' $srv_info`"
    CPURATE="`awk '{print $12}' $srv_info`GHz"
    CPUCOUT="`awk '{print $13}' $srv_info` CPUs"
    CPUCORE="`awk '{print $14}' $srv_info` Cores"
    CPUTHRD="`awk '{print $15}' $srv_info` Threads"
    DSKSIZE="`awk '{print $18}' $srv_info`GB"
    DSKTYPE="`awk '{print $19}' $srv_info`"
    DSKCOUT="`awk '{print $20}' $srv_info`"
    DISKRPM="`awk '{print $21}' $srv_info`"
    RAIDSET="`awk '{print $22}' $srv_info`"

	if [ "$DSKCOUT" = 1 ]
	then
		RAIDSET="Not Set"
	fi
	
    python -c "print '-' * 40"
    printf "\033[1m%16s\033[0m: %-30s\n" "ID"               "`awk '{print $1}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "CTIP"             "`awk '{print $2}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "CUIP"             "`awk '{print $3}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "CMIP"             "`awk '{print $4}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "NAT IP"           "`awk '{print $5}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Manager Port"     "`awk '{print $6}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Open Ports"       "`awk '{print $7}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Hostname"         "`awk '{print $8}' $srv_info`"  
    printf "\033[1m%16s\033[0m: %-30s\n" "Allowed Users"    "`awk '{print $9}' $srv_info`"
    printf "\033[1m%16s\033[0m: %-30s\n" "Product Mode"     "`awk '{print $25,$26}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Height"           "`awk '{print $27}' $srv_info` U" 
    printf "\033[1m%16s\033[0m: %-30s\n" "CPU"              "$CPUMODE $CPURATE, $CPUCOUT, $CPUCORE $CPUTHRD per CPU" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Disk"             "$DSKSIZE ${DISKRPM}RPM $DSKTYPE x $DSKCOUT, RAID $RAIDSET" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Memory"           "`awk '{print $16}' $srv_info`GB x `awk '{print $17}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Power"            "`awk '{print $23}' $srv_info`W x `awk '{print $24}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Serial Number"    "`awk '{print $28}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Exp Service Code" "`awk '{print $29}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Asset Number"     "`awk '{print $30}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Operating System" "`awk '{print $31}' $srv_info`, Kernel `awk '{print $32}' $srv_info`" 
    printf "\033[1m%16s\033[0m: %-30s\n" "Location"         "`awk '{print $33}' $srv_info`"
    printf "\033[1m%16s\033[0m: %-30s\n" "Description"      "`awk '{print $34}' $srv_info`"
}

gt_db_query(){
    if [ "$UOPTIONS" = "--include-hidden" ]
    then
        if [ "$UID" = "0" ]
        then
            Extra_filter=""
        else
            log error "Error: Option $UOPTIONS: Require root privileges: Permission denied"
            echo -e   "\033[1;41mError\033[0m: Option '$UOPTIONS': Require root privileges: Permission denied"
            echo -e   "Print only filtered results\n"
            Extra_filter="and Login_users like '%$USER%'"
        fi 
    else
        Extra_filter="and Login_users like '%$USER%'"
    fi 
    
    db_exec "set @myrow = 0;select (@myrow := @myrow + 1) as ID,CTIP,CUIP,CMIP,NATIP,Hostname,Port,Login_users from metis.server where concat(CTIP,CUIP,CMIP,NATIP,Hostname) like '%$Keywords%' is null $Extra_filter and(CUIP like '%$Keywords%' or CMIP like '%$Keywords%' or CTIP like '%$Keywords%' or NATIP like '%$Keywords%' or Hostname like '%$Keywords%')" > $mth_auth
    Check file empty $mth_auth "Search: $Keywords: No results found"
}

gt_db_search(){
    gt_db_query
    while read ID CTIP CUIP CMIP NATIP Hostname SSHDPORT Login_users
    do
        if [ "$Login_users" = "nologin" ]
        then
            SSHDPORT="HiLi:$SSHDPORT"
            echo "$ID $CTIP $CUIP $CMIP $NATIP $Hostname $SSHDPORT" >> $keymatch
        else
            echo "$ID $CTIP $CUIP $CMIP $NATIP $Hostname $SSHDPORT" >> $keymatch
        fi
    done <   $mth_auth
    Del_file $mth_auth
}

gt_print_results(){
    hastitle=0
    PrintColor=37
    while read ID CTIP CUIP CMIP NATIP Hostname SSHDPORT
    do 
        test "$CTIP"     = NULL &&     CTIP="-" 
        test "$CUIP"     = NULL &&     CUIP="-"
        test "$CMIP"     = NULL &&     CMIP="-"
        test "$NATIP"    = NULL &&    NATIP="-"
        test "$Hostname" = NULL && Hostname="-"

        if [ "`echo $SSHDPORT | awk -F ':' '{print $1}'`" = "HiLi" ]
        then
            HigLight=0
            SSHDPORT=`echo $SSHDPORT | awk -F ':' '{print $2}'`
        else
            HigLight=1
        fi 
        
        Printwidth="`awk '{print $1,$2,$3,$4,$5,$6}' $keymatch | Stringetmax`"
        if [ "$HigLight" = 0 ]
        then
            Print_umw -num "$Printwidth" -str "$ID" "$CTIP" "$CUIP" "$CMIP" "$NATIP" "$Hostname" -tle 0 -col '31'
        else
            if [ $hastitle = 0 ]
            then
                Print_umw -num "$Printwidth" -str "$ID" "$CTIP" "$CUIP" "$CMIP" "$NATIP" "$Hostname" -tle 0 -col '4;1;44'
                hastitle=1
            else
                if [ $PrintColor = 37 ]
                then
                    PrintColor=39
                else
                    PrintColor=37
                fi 
                Print_umw -num "$Printwidth" -str "$ID" "$CTIP" "$CUIP" "$CMIP" "$NATIP" "$Hostname" -tle 0 -col "$PrintColor"
            fi 
        fi
    done < $keymatch
}

gt_srvinfo(){
    grep "^$usr_input" $keymatch | head -1 > $usr_chio
    grep -q 'HiLi' $usr_chio 
    Returncode=$?
    if [ $Returncode = 0 ]
    then
        ftmp delete
        echo -e "\n\033[1;41mAttention\033[0m: Dear \033[1m$Username\033[0m, you do not have permission to access the requested server('ID: $usr_input')"
        if [ "$Rangenum" = "$usr_input" ]
        then
            inputorauto=auto-identified
        else
            inputorauto=user-input 
        fi 
        log auth "Attention: Dear $Username, you do not have permission to access the requested server(ID $usr_input of $Rangenum: $inputorauto)"
        exit 1
    fi
    if [ -z "$Keywords" ]
    then
        MATCHCOL=0
    else
        MATCHCOL="`cat $usr_chio | Stringmthcol $Keywords | head -1`"
    fi
    if [ "$MATCHCOL" -gt 1 ] # -a "$MATCHCOL" -lt 6 ]
    then
        true
    else
        Range=2
        while true
        do 
            if [ "`awk '{print $'$Range'}' $usr_chio`" != NULL ]
            then
                MATCHCOL=$Range
                break
            else
                echo $((Range++)) > /dev/null
            fi 
        done
    fi 
    SERVIPAD="`awk '{print $'$MATCHCOL'}' $usr_chio | head -1`"
    SERVPORT="`awk '{print $7}' $usr_chio | head -1`"
    SERVNAME="`awk '{print $6}' $usr_chio | head -1`"
    Del_file $keymatch $usr_chio
}
gt_getsrv(){
    gt_db_search
    Check file empty $keymatch "Error: Search $Keywords: No results found"
    if [ "`cat $keymatch | sed '1d' | wc -l`" -gt 1 ]
    then
        echo "Error: $Keywords: Too many results, use the more accurate keyword"
        ftmp delete
        log error "Error: $Keywords: Too many results, use the more accurate keyword"
        exit 1
    fi 
    usr_input=1
    gt_srvinfo
    ftmp delete
}
